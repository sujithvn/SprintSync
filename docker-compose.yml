services:
  # PostgreSQL Database
  database:
    image: postgres:15-alpine
    container_name: sprintsync-db
    environment:
      POSTGRES_DB: sprintsync
      POSTGRES_USER: sprintsync_user
      POSTGRES_PASSWORD: sprintsync_pass
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U sprintsync_user -d sprintsync"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: sprintsync-backend
    environment:
      - NODE_ENV=production
      - PORT=3000
      - DATABASE_URL=postgresql://sprintsync_user:sprintsync_pass@database:5432/sprintsync
    ports:
      - "3000:3000"
    depends_on:
      database:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Future: Frontend will go here
  # frontend:
  #   build:
  #     context: ./frontend
  #     dockerfile: Dockerfile
  #   container_name: sprintsync-frontend
  #   ports:
  #     - "3001:3000"
  #   depends_on:
  #     - backend

volumes:
  postgres_data:
